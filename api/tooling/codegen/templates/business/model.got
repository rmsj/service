package {{.DomainLower}}bus

import (
	"time"

	"github.com/google/uuid"
)

// {{.DomainUpper}} represents an individual {{.DomainLower}}.
type {{.DomainUpper}} struct {
	ID        uuid.UUID
	UpdatedAt time.Time
	CreatedAt time.Time
}

// New{{.DomainUpper}} is what we require from clients when adding a {{.DomainLower}}.
type New{{.DomainUpper}} struct {
}

// Update{{.DomainUpper}} defines what information may be provided to modify an existing
// {{.DomainUpper}}. All fields are optional so clients can send only the fields they want
// changed. It uses pointer fields so we can differentiate between a field that
// was not provided and a field that was provided as explicitly blank. Normally
// we do not want to use pointers to basic types but, we make exception around
// marshalling/unmarshalling.
type Update{{.DomainUpper}} struct {
}
